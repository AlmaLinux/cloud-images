---
# tasks file for crearting partition table, partitions and format filesystem
- name: Gather disk information
  ansible.builtin.command: parted /dev/nvme1n1 unit MiB print
  changed_when: false
  register: parted_output

- name: Show disk information before the operations
  ansible.builtin.debug:
    var: parted_output.stdout_lines

- name: Create EFI System Partition
  ansible.builtin.command: parted -s -a optimal /dev/nvme1n1 -- mklabel gpt mkpart '"EFI System Partition"' fat32 0% 201MiB set 1 esp on
  changed_when: true

- name: Create Boot Partition
  ansible.builtin.command: parted -s -a optimal /dev/nvme1n1 -- mkpart '"Boot Partition"' xfs 201MiB 713MiB
  changed_when: true

- name: Create Root Partition
  ansible.builtin.command: parted -s -a optimal /dev/nvme1n1 -- mkpart '"Root Partition"' xfs 713MiB 100%
  changed_when: true

- name: Format ESP as FAT32
  filesystem:
    dev: "/dev/nvme1n1p1"
    fstype: vfat
    opts: "-F 32"
    state: present

- name: Format Boot partition as XFS
  filesystem:
    dev: "/dev/nvme1n1p2"
    fstype: xfs
    state: present

- name: Format Root partition as XFS
  filesystem:
    dev: "/dev/nvme1n1p3"
    fstype: xfs
    state: present

- name: Gather disk information
  ansible.builtin.command: parted /dev/nvme1n1 unit MiB print
  changed_when: false
  register: parted_output

- name: Show disk information after the operations
  ansible.builtin.debug:
    var: parted_output.stdout_lines

- name: Get UUID of EFI System Partition
  ansible.builtin.command: blkid /dev/nvme1n1p1 -s UUID -o value
  changed_when: false
  register: esp_uuid

- name: Get UUID of Boot partition
  ansible.builtin.command: blkid /dev/nvme1n1p2 -s UUID -o value
  changed_when: false
  register: boot_uuid

- name: Get UUID of Root
  ansible.builtin.command: blkid /dev/nvme1n1p3 -s UUID -o value
  changed_when: false
  register: root_uuid
