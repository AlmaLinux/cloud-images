---
# tasks file for preparing the system for AWS and install guest tools
- name: Remove firewall and linux-firmware
  command:
    argv:
      - dnf
      - -y
      - --installroot=/rootfs
      - --nogpgcheck
      - remove
      - firewalld
      - firewalld-filesystem
      - ipset
      - ipset-libs
      - iptables
      - python3-firewall
      - python3-slip
      - libnftnl
      - libnfnetlink
      - linux-firmware

- name: Find persistent-net.rules
  find:
    paths: /rootfs/etc/udev/rules.d
    patterns: 70*
  register: net_rules

- name: Delete persistent-net.rules
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ net_rules.files }}"

- name: Configure /etc/sysconfig/network
  lineinfile:
    path: /rootfs/etc/sysconfig/network
    line: "{{ item }}"
    create: yes
  with_items:
    - NETWORKING=yes
    - NOZEROCONF=yes

- name: Create network-scripts folder
  file:
    path: /rootfs/etc/sysconfig/network-scripts
    state: directory

- name: Configure /etc/sysconfig/network-scripts/ifcfg-eth0
  copy:
    src: files/ifcfg-eth0
    dest: /rootfs/etc/sysconfig/network-scripts/ifcfg-eth0
    owner: root
    group: root
    mode: 0644

- name: Disable consistent network device naming
  file:
    src: /dev/null
    dest: /rootfs/etc/udev/rules.d/80-net-name-slot.rules
    owner: root
    group: root
    state: link

- name: Blacklist nouveau kernel module
  lineinfile:
    path: /rootfs/etc/modprobe.d/blacklist-nouveau.conf
    line: blacklist nouveau
    create: true
    owner: root
    group: root
    mode: 0644

- name: Disable firstboot
  lineinfile:
    path: /rootfs/etc/sysconfig/firstboot
    line: RUN_FIRSTBOOT=NO
    create: true
    owner: root
    group: root
    mode: 0644

- name: Disable root login
  command: "{{ item }}"
  loop:
    - chroot /rootfs passwd -d root
    - chroot /rootfs passwd -l root

- name: Add Amazon Time Sync Service to chrony config
  lineinfile:
    path: /rootfs/etc/chrony.conf
    line: "{{ item }}"
  with_items:
    - '# Amazon Time Sync Service'
    - 'server 169.254.169.123 prefer iburst'

- name: Disable virtual terminals allocation by logind
  replace:
    dest: "/rootfs/etc/systemd/logind.conf"
    regexp: '^#?NAutoVTs=\d+'
    replace: 'NAutoVTs=0'

- name: Install additional software
  command:
    argv:
      - dnf
      - -y
      - --installroot=/rootfs
      - --nogpgcheck
      - install
      - cloud-init
      - cloud-utils-growpart
      - dracut-config-generic
      - gdisk
      - rsync
      - tar
      - qemu-guest-agent
      - tuned

- name: Install AWS Systems Manager Agent (SSM Agent)
  dnf:
    installroot: "/rootfs"
    disable_gpg_check: yes
    name: https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_arm64/amazon-ssm-agent.rpm
    state: present

- name: configure NetworkManager in cloud
  file:
    path: /rootfs/etc/systemd/system/nm-cloud-setup.service.d
    state: directory

- name: Setting NM Cloud provider to AWS
  lineinfile:
    path: /rootfs/etc/systemd/system/nm-cloud-setup.service.d/10-enable-ec2.conf
    line: "{{ item }}"
    create: yes
  with_items:
    - '[Service]'
    - Environment=NM_CLOUD_SETUP_EC2=yes

- name: Configure NetworkManager default DHCP timeout
  community.general.ini_file:
    path: /rootfs/etc/NetworkManager/conf.d/dhcp.conf
    section: connection
    option: ipv4.dhcp-timeout
    value: 300
    owner: root
    group: root
    mode: 0644
    seuser: system_u

- name: Disable SSH password authentication
  lineinfile:
    path: /rootfs/etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: "sshd -T -f %s"
  loop:
    - { regexp: '^PasswordAuthentication',
        line: 'PasswordAuthentication no'
      }
    - {
        regexp: '^ChallengeResponseAuthentication',
        line: 'ChallengeResponseAuthentication no',
      }

- name: Enable openssh-server cloud-init amazon-ssm-agent services
  command: chroot /rootfs systemctl enable {{ item }}
  loop:
    - nm-cloud-setup.service
    - nm-cloud-setup.timer
    - sshd
    - chronyd
    - cloud-config
    - cloud-init
    - cloud-init-local
    - cloud-final
    - amazon-ssm-agent

- name: Change cloud-init user to ec2-user
  replace:
    dest: /rootfs/etc/cloud/cloud.cfg
    regexp: '^(\s+name:).*$'
    replace: '\1 ec2-user'

- name: Set virtual-guest as default profile for tuned
  lineinfile:
    path: /rootfs/etc/tuned/active_profile
    line: virtual-guest
    create: yes

- name: Enable sgdisk in dracut
  lineinfile:
    path: /rootfs/etc/dracut.conf.d/sgdisk.conf
    line: 'install_items+=" sgdisk "'
    create: true
    owner: root
    group: root
    mode: 0644

- name: Enable NVME driver
  lineinfile:
    path: /rootfs/etc/dracut.conf.d/ec2.conf
    line: 'add_drivers+=" nvme "'
    create: true
    owner: root
    group: root
    mode: 0644

- name: Upgrade initramfs
  command: chroot /rootfs dracut -f --regenerate-all
